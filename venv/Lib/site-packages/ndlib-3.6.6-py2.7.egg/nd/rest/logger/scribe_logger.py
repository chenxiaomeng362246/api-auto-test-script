# coding=utf-8


from nd.rest.Singleton import Singleton

from nd.rest.logger.log import LogInfo

from nd.rest.logger.scribe_handler import ScribeHandler

import logging


class ScribeLogger(Singleton):
    """
    scribe日志记录器

    """
    def __init__(self):
        super(Singleton, self).__init__()

        log_info = LogInfo()

        format_str = log_info.get_format_str()
        log_file = log_info.get_log_file()

        logging.basicConfig(level=logging.INFO, format=format_str, filename=log_file)
        log_o = logging.getLogger(__name__)

        if not hasattr(self, 'handler'):

            self.handler = ScribeHandler()
            self.handler.setFormatter(log_info.get_format())

            log_o.addHandler(self.handler)

        self.logger = log_o

    def write(self, msg):
        """

        :param msg:
        :return:
        """
        self.logger.info(msg)


def check_deps():
    dep = False
    import importlib

    try:
        importlib.import_module("thrift")
        importlib.import_module("scribe")
        importlib.import_module("fb303")
        dep = True
    except Exception, e:
        print "分布式写入相关组件缺失", e

    return dep


if __name__ == "__main__":
    from nd.rest.logger.config import LogConfig
    LogConfig.HOST = "fs2.qa.huayu.nd"
    logger = ScribeLogger()
    logger.write("hello, world")

