# coding=utf-8
import time

from ..co_test.co_config import CoConfig
from ..co_test.co_send_strategy import CoSendStrategy
from ..nd_im.new import SendNew99U
import logging
import urllib2
import json
import socket
import os
import requests
from hamcrest import *

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


class CoSenderToMot(object):
    """
    报告发送
    """

    def __init__(self, report_local_url):
        """
        :param report_local_url: 本地报告路径
        """
        self.report_local_url = report_local_url

    def send_mot(self, pro_id=None, rule_id=None):
        """
        发送到线上监控平台
        :param rule_id: 任务id
        :param pro_id: 项目id
        :return:
        """
        if pro_id is None or pro_id == '':
            return
        try:
            report_local_url = self.report_local_url
            # 获取本地ip
            local_ip = socket.gethostbyname(socket.gethostname())
            port = "10000"  # 报告地址的端口，若使用默认端口（80）可以为空
            if port != "":
                report_url = "http://" + local_ip + ":" + port + "/project/pro_" + pro_id + report_local_url
            else:
                report_url = "http://" + local_ip + "/project/pro_" + pro_id + report_local_url

            # 获取监控平台服务ip
            mot_ip = self.get_mot_ip()
            if mot_ip:      # 如果已配置
                url = 'http://' + mot_ip + '/v1.0/task'
                body = {
                    "url":report_url,
                    "proId":pro_id,
                    "state":0
                }
                if rule_id is not None and rule_id != '':
                    body.update({"testRuleId": str(rule_id)})
                data = json.dumps(body)

                attempts = 0
                success = False
                while attempts < 3 and not success:     # 发送失败重试3次
                    try:
                        print u"第"+unicode(attempts + 1)+u"次发送报告到监控平台, url: "+url
                        print u'body: ' + data
                        res_data = requests.post(url, data=data, headers={'Content-Type': 'application/json'})
                        assert_that(res_data.status_code, equal_to(200))
                        success=True
                    except:     # 异常次数+1，等待3s
                        attempts += 1
                        time.sleep(3)

                if success:
                    print u'报告发送成功'
                else:
                    print u'报告发送失败'
        except:
            print u'向监控平台发送报告失败'

    def get_mot_ip(self):
        """
        获取监控平台报告处理服务器的ip
        :return:
        """
        try:
            path = os.path.dirname(__file__)
            ip_path = path + os.sep + '..' + os.sep + '..' + os.sep + '..' + os.sep
            file = open(ip_path+'mot_ip.txt', "rb")
            ip = file.read()
            file.close()
        except:
            ip = None
            print u'获取监控平台报告处理服务器的ip失败'
        return ip
