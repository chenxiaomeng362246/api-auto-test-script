# coding=utf-8

from nd.rest.co_http.co_curl import Http
from nd.rest.nd_uc import UcEnv
from nd.rest.uc.config.uc_config import UcConfig
from nd.rest.uc.mac.uc_token import UcTokenMg
from nd.rest.uc.mac.v1_1.tok import MacV11Token

Http.DEBUG = True
__author__ = 'linzh'

import unittest


class MacV11Test(unittest.TestCase):
    def test_device_id(self):
        config = UcConfig()
        tok_o = MacV11Token(config)
        print tok_o.device_id()

    def test_session(self):
        config = UcConfig()
        config.set_env(UcEnv.pre)
        tok_o = MacV11Token(config)
        session = tok_o.get_session()
        print "session: ", session

    def test_token(self):
        config = UcConfig()
        config.set_env(UcEnv.pre)
        config.username = "10005074"
        config.password = "qa123456"
        config.org = "nd"
        tok_o = MacV11Token(config)
        tok_o.get_session()
        tok = tok_o.token()
        print "token: ", tok

    def test_valid_token(self):
        config = UcConfig()
        config.set_env(UcEnv.pre)
        config.username = "10005074"
        config.password = "qa123456"
        config.org = "nd"
        tok_o = MacV11Token(config)
        tok_o.token_valid(config.username)

    def test_mac(self):
        config = UcConfig()
        config.set_env(UcEnv.pre)
        config.username = "10005074"
        config.password = "qa123456"
        config.org = "nd"
        tok_o = MacV11Token(config)
        tok_o.get_session()
        if not tok_o.token_valid(config.username):
            tok_o.token()
        auth = tok_o.get_mac(method="GET", url="/v1/channels/search", host="auxo-channel-api.dev.web.nd")
        print auth
        http_o = Http("auxo-channel-api.dev.web.nd")
        Http.DEBUG = True
        http_o.set_header({"Authorization": auth, "Content-Type": "application/json"})
        http_o.get("/v1/channels/search")